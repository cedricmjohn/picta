[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GeoOptions$Geo$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(copy$default$10,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(coastlinewidth,[Default]), UsedName(lataxis,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(<init>$default$10,[Default]), UsedName(apply$default$10,[Default]), UsedName(wait,[Default]), UsedName(scope,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(landcolor,[Default]), UsedName(finalize,[Default]), UsedName(showlakes,[Default]), UsedName(lakecolor,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(showland,[Default]), UsedName(<init>$default$6,[Default]), UsedName(<init>$default$9,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(resolution,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(picta;options;GeoOptions;Geo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(longaxis,[Default]), UsedName(apply$default$9,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(copy$default$9,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(projection,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GeoOptions$Geo$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GeoOptions$Geo$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.ProjectionOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(Projection,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(ProjectionOptions,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.ProjectionOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.ProjectionOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Projection,[Default]), UsedName(ProjectionOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MarkerOptions$Marker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(symbol,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(line,[Default]), UsedName(wait,[Default]), UsedName(c1,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(c0,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(picta;options;MarkerOptions;Marker;init;,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MarkerOptions$Marker: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MarkerOptions$Marker.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.traces.XYTrace$XY$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$10,[Default]), UsedName(picta;traces;XYTrace;XY;init;,[Default]), UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.traces.XYTrace$XY$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.traces.XYTrace$XY$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LegendOptions$Legend$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(y,[Default]), UsedName(xanchor,[Default]), UsedName(x,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName(yanchor,[Default]), UsedName($init$,[Default]), UsedName(copy$default$5,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(picta;options;LegendOptions;Legend;init;,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(orientation,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LegendOptions$Legend$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LegendOptions$Legend$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GeoOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(GeoOptions,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GeoOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GeoOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(GeoOptions,[Default]), UsedName(==,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(GeoOptions,[Default]), UsedName(toString,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MapAxisOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(MapAxis,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(MapAxisOptions,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(LongAxis,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MapAxisOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MapAxisOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(==,[Default]), UsedName(LatAxis,[Default]), UsedName(MapAxisOptions,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(toString,[Default]), UsedName(LatAxis,[Default]), UsedName(MapAxisOptions,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MapAxisOptions$LongAxis has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;MapAxisOptions;LongAxis;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(LongAxis,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MapAxisOptions$LongAxis: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MapAxisOptions$LongAxis.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LegendOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LegendOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LegendOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Legend,[Default]), UsedName(LegendOptions,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Legend,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LayoutOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Layout,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(LayoutOptions,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LayoutOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LayoutOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Layout,[Default]), UsedName(LayoutOptions,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.charts.Chart$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(picta;charts;Chart;init;,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(layout,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.charts.Chart$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.charts.Chart$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MapAxisOptions$LongAxis$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;MapAxisOptions;LongAxis;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(LongAxis,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MapAxisOptions$LongAxis$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MapAxisOptions$LongAxis$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(LongAxis,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GridOptions$Grid$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(rows,[Default]), UsedName(copy$default$1,[Default]), UsedName(columns,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName(picta;options;GridOptions;Grid;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(pattern,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GridOptions$Grid$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GridOptions$Grid$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GridOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(GridOptions,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GridOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GridOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(GridOptions,[Default]), UsedName(==,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(GridOptions,[Default]), UsedName(toString,[Default]), UsedName(Grid,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LineOptions$Line has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(Line,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(picta;options;LineOptions;Line;init;,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LineOptions$Line: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LineOptions$Line.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(color,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.charts.Chart has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(picta;charts;Chart;init;,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(layout,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.charts.Chart: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.charts.Chart.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply,[Default]), UsedName(layout,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MarkerOptions$Marker$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(symbol,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(line,[Default]), UsedName(wait,[Default]), UsedName(c1,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(c0,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(picta;options;MarkerOptions;Marker;init;,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MarkerOptions$Marker$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MarkerOptions$Marker$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(Marker,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LineOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LineOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LineOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.traces.MapTrace$Map has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(picta;traces;MapTrace;Map;init;,[Default]), UsedName(copy$default$4,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.traces.MapTrace$Map: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.traces.MapTrace$Map.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MapAxisOptions$LatAxis has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(picta;options;MapAxisOptions;LatAxis;init;,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MapAxisOptions$LatAxis: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MapAxisOptions$LatAxis.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MarkerOptions$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MarkerOptions$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MarkerOptions$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(MarkerOptions,[Default]), UsedName(==,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.traces.MapTrace$Map$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(picta;traces;MapTrace;Map;init;,[Default]), UsedName(copy$default$4,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.traces.MapTrace$Map$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.traces.MapTrace$Map$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GridOptions$Grid has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(rows,[Default]), UsedName(copy$default$1,[Default]), UsedName(columns,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName(picta;options;GridOptions;Grid;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(pattern,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GridOptions$Grid: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GridOptions$Grid.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(Grid,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.GeoOptions$Geo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(copy$default$10,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(coastlinewidth,[Default]), UsedName(lataxis,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(<init>$default$10,[Default]), UsedName(apply$default$10,[Default]), UsedName(wait,[Default]), UsedName(scope,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(landcolor,[Default]), UsedName(finalize,[Default]), UsedName(showlakes,[Default]), UsedName(lakecolor,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(showland,[Default]), UsedName(<init>$default$6,[Default]), UsedName(<init>$default$9,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(resolution,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(picta;options;GeoOptions;Geo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(longaxis,[Default]), UsedName(apply$default$9,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(copy$default$9,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(projection,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.GeoOptions$Geo: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.GeoOptions$Geo.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply$default$10,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(apply$default$9,[Default]), UsedName(serialize,[Default]), UsedName(Geo,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.traces.XYTrace$XY has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(copy$default$10,[Default]), UsedName(picta;traces;XYTrace;XY;init;,[Default]), UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.traces.XYTrace$XY: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.traces.XYTrace$XY.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(+,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LayoutOptions$Layout has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;LayoutOptions;Layout;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(showlegend,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(height,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(defaultAxis,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(<init>$default$6,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(title,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(axs,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(legend,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LayoutOptions$Layout: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LayoutOptions$Layout.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LayoutOptions$Layout$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;LayoutOptions;Layout;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(showlegend,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(height,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(defaultAxis,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(<init>$default$6,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(title,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(axs,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(legend,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LayoutOptions$Layout$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LayoutOptions$Layout$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName(apply$default$6,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]), UsedName(apply$default$7,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LegendOptions$Legend has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(y,[Default]), UsedName(xanchor,[Default]), UsedName(x,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName(yanchor,[Default]), UsedName($init$,[Default]), UsedName(copy$default$5,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(picta;options;LegendOptions;Legend;init;,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(orientation,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LegendOptions$Legend: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LegendOptions$Legend.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MarkerTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.BasicChartTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.XYZTests: Set(UsedName(y,[Default]), UsedName(x,[Default]), UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.CompositionTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.Histogram2DContourTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.ScatterWithColorTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LayoutTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(Legend,[Default]), UsedName(apply,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.ProjectionOptions$Projection has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(andThen,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(Projection,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(compose,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(picta;options;ProjectionOptions;Projection;init;,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(projection_type,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.ProjectionOptions$Projection: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.ProjectionOptions$Projection.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Projection,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.MapAxisOptions$LatAxis$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(picta;options;MapAxisOptions;LatAxis;init;,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.MapAxisOptions$LatAxis$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.MapAxisOptions$LatAxis$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(apply$default$3,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(apply$default$2,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe picta.options.LineOptions$Line$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unapply,[Default]), UsedName(Line,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(picta;options;LineOptions;Line;init;,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) picta.options.LineOptions$Line$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) picta.options.LineOptions$Line$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.LineTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.HistogramTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of picta.MapTests: Set(UsedName(Line,[Default]), UsedName(apply,[Default]), UsedName(apply$default$1,[Default]), UsedName(color,[Default]), UsedName(toString,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(serialize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/fazi/Desktop/irp-acse-fk4517/Code/src/test/scala/UnitTests.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(picta.options.GeoOptions$Geo$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(copy$default$10,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(coastlinewidth,[Default]), UsedName(lataxis,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(<init>$default$10,[Default]), UsedName(apply$default$10,[Default]), UsedName(wait,[Default]), UsedName(scope,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(landcolor,[Default]), UsedName(finalize,[Default]), UsedName(showlakes,[Default]), UsedName(lakecolor,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(showland,[Default]), UsedName(<init>$default$6,[Default]), UsedName(<init>$default$9,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(resolution,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(picta;options;GeoOptions;Geo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(longaxis,[Default]), UsedName(apply$default$9,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(copy$default$9,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(projection,[Default]))), NamesChange(picta.options.ProjectionOptions$,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(Projection,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(ProjectionOptions,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.options.MarkerOptions$Marker,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(symbol,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(line,[Default]), UsedName(wait,[Default]), UsedName(c1,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(c0,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(picta;options;MarkerOptions;Marker;init;,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.traces.XYTrace$XY$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$10,[Default]), UsedName(picta;traces;XYTrace;XY;init;,[Default]), UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]))), NamesChange(picta.options.LegendOptions$Legend$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(y,[Default]), UsedName(xanchor,[Default]), UsedName(x,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName(yanchor,[Default]), UsedName($init$,[Default]), UsedName(copy$default$5,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(picta;options;LegendOptions;Legend;init;,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(orientation,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.GeoOptions$,ModifiedNames(changes = UsedName(GeoOptions,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.options.MapAxisOptions$,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(MapAxis,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(MapAxisOptions,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(LongAxis,[Default]))), NamesChange(picta.options.MapAxisOptions$LongAxis,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;MapAxisOptions;LongAxis;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(LongAxis,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.LegendOptions$,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(LegendOptions,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.options.LayoutOptions$,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(Layout,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(LayoutOptions,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.charts.Chart$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(picta;charts;Chart;init;,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(layout,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))), NamesChange(picta.options.MapAxisOptions$LongAxis$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;MapAxisOptions;LongAxis;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(LongAxis,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.GridOptions$Grid$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(rows,[Default]), UsedName(copy$default$1,[Default]), UsedName(columns,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName(picta;options;GridOptions;Grid;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(pattern,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.GridOptions$,ModifiedNames(changes = UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(GridOptions,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.options.LineOptions$Line,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(Line,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(picta;options;LineOptions;Line;init;,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.charts.Chart,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(picta;charts;Chart;init;,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$2,[Default]), UsedName(copy$default$2,[Default]), UsedName(layout,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(apply$default$2,[Default]), UsedName(Chart,[Default]))), NamesChange(picta.options.MarkerOptions$Marker$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$1,[Default]), UsedName(symbol,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(line,[Default]), UsedName(wait,[Default]), UsedName(c1,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(c0,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(picta;options;MarkerOptions;Marker;init;,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.LineOptions$,ModifiedNames(changes = UsedName(LineOptions,[Default]), UsedName(Line,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.traces.MapTrace$Map,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(picta;traces;MapTrace;Map;init;,[Default]), UsedName(copy$default$4,[Default]))), NamesChange(picta.options.MapAxisOptions$LatAxis,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(picta;options;MapAxisOptions;LatAxis;init;,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.MarkerOptions$,ModifiedNames(changes = UsedName(MarkerOptions,[Default]), UsedName(Marker,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]))), NamesChange(picta.traces.MapTrace$Map$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(line,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(picta;traces;MapTrace;Map;init;,[Default]), UsedName(copy$default$4,[Default]))), NamesChange(picta.options.GridOptions$Grid,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(rows,[Default]), UsedName(copy$default$1,[Default]), UsedName(columns,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName(picta;options;GridOptions;Grid;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(pattern,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Grid,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.GeoOptions$Geo,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(copy$default$10,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(coastlinewidth,[Default]), UsedName(lataxis,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(<init>$default$10,[Default]), UsedName(apply$default$10,[Default]), UsedName(wait,[Default]), UsedName(scope,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(landcolor,[Default]), UsedName(finalize,[Default]), UsedName(showlakes,[Default]), UsedName(lakecolor,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(showland,[Default]), UsedName(<init>$default$6,[Default]), UsedName(<init>$default$9,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(resolution,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName(picta;options;GeoOptions;Geo;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(longaxis,[Default]), UsedName(apply$default$9,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(copy$default$9,[Default]), UsedName(Geo,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]), UsedName(projection,[Default]))), NamesChange(picta.traces.XYTrace$XY,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(copy$default$10,[Default]), UsedName(picta;traces;XYTrace;XY;init;,[Default]), UsedName(apply,[Default]), UsedName(marker,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]))), NamesChange(picta.options.LayoutOptions$Layout,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;LayoutOptions;Layout;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(showlegend,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(height,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(defaultAxis,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(<init>$default$6,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(title,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(axs,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(legend,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.LayoutOptions$Layout$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(<init>$default$8,[Default]), UsedName(geo,[Default]), UsedName(apply$default$8,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(picta;options;LayoutOptions;Layout;init;,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(showlegend,[Default]), UsedName(apply,[Default]), UsedName(<init>$default$7,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(height,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(defaultAxis,[Default]), UsedName(apply$default$1,[Default]), UsedName(Layout,[Default]), UsedName($init$,[Default]), UsedName(apply$default$6,[Default]), UsedName(copy$default$5,[Default]), UsedName(copy$default$6,[Default]), UsedName(<init>$default$6,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(copy$default$8,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(copy$default$7,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(+,[Default]), UsedName(title,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(grid,[Default]), UsedName(axs,[Default]), UsedName(ne,[Default]), UsedName(apply$default$7,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(legend,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.LegendOptions$Legend,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(y,[Default]), UsedName(xanchor,[Default]), UsedName(x,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(<init>$default$5,[Default]), UsedName(Legend,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(apply$default$4,[Default]), UsedName(apply$default$5,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName(yanchor,[Default]), UsedName($init$,[Default]), UsedName(copy$default$5,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(picta;options;LegendOptions;Legend;init;,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(orientation,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$4,[Default]), UsedName(copy$default$4,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.ProjectionOptions$Projection,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(andThen,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(Projection,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(compose,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(picta;options;ProjectionOptions;Projection;init;,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(projection_type,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.MapAxisOptions$LatAxis$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(range,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(hashCode,[Default]), UsedName(apply$default$3,[Default]), UsedName(##,[Default]), UsedName(picta;options;MapAxisOptions;LatAxis;init;,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(curried,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(dtick,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(<init>$default$3,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(showgrid,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(LatAxis,[Default]), UsedName(serialize,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(productPrefix,[Default]))), NamesChange(picta.options.LineOptions$Line$,ModifiedNames(changes = UsedName(unapply,[Default]), UsedName(Line,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(productElementNames,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(apply$default$1,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(color,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(productElement,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(<init>$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$2,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(copy,[Default]), UsedName(+,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply$default$2,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(serialize,[Default]), UsedName(picta;options;LineOptions;Line;init;,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(<init>$default$1,[Default]), UsedName(productPrefix,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/Users/fazi/Desktop/irp-acse-fk4517/Code/target/scala-2.13/classes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(picta.HistogramTests, picta.UnitTestUtils, picta.MarkerTests, picta.BasicChartTests, picta.XYZTests, picta.CompositionTests, picta.Histogram2DContourTests, picta.ScatterWithColorTests, picta.LineTests, picta.LayoutTests, picta.MapTests)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(picta.HistogramTests, picta.MarkerTests, picta.BasicChartTests, picta.XYZTests, picta.CompositionTests, picta.Histogram2DContourTests, picta.ScatterWithColorTests, picta.LineTests, picta.LayoutTests, picta.MapTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: picta.HistogramTests, picta.UnitTestUtils, picta.MarkerTests, picta.BasicChartTests, picta.XYZTests, picta.CompositionTests, picta.Histogram2DContourTests, picta.ScatterWithColorTests, picta.LineTests, picta.LayoutTests, picta.MapTests[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /Users/fazi/Desktop/irp-acse-fk4517/Code/target/scala-2.13/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4ce79d7e for Scala compiler version 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.2/scala-library-2.13.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/fazi/Desktop/irp-acse-fk4517/Code/target/scala-2.13/test-classes:/Users/fazi/Desktop/irp-acse-fk4517/Code/target/scala-2.13/classes:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.13/3.1.2/scalactic_2.13-3.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/carbonateresearch/conus_2.13/0.2.0/conus_2.13-0.2.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/upickle_2.13/1.1.0/upickle_2.13-1.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/jitpack.io/com/github/jupyter/jvm-repr/0.4.0/jvm-repr-0.4.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/sh/almond/interpreter-api_2.13/0.10.0/interpreter-api_2.13-0.10.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/sh/almond/jupyter-api_2.13/0.10.0/jupyter-api_2.13-0.10.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/os-lib_2.13/0.7.0/os-lib_2.13-0.7.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/tototoshi/scala-csv_2.13/1.3.6/scala-csv_2.13-1.3.6.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.13/3.1.2/scalatest_2.13-3.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.2/scala-reflect-2.13.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor-typed_2.13/2.6.5/akka-actor-typed_2.13-2.6.5.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/scalatags_2.13/0.9.1/scalatags_2.13-0.9.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/poi/poi/4.1.2/poi-4.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/poi/poi-ooxml/4.1.2/poi-ooxml-4.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/poi/poi-ooxml-schemas/4.1.2/poi-ooxml-schemas-4.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalanlp/breeze_2.13/1.0/breeze_2.13-1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalanlp/breeze-natives_2.13/1.0/breeze-natives_2.13-1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalanlp/breeze-viz_2.13/1.0/breeze-viz_2.13-1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/ujson_2.13/1.1.0/ujson_2.13-1.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/upack_2.13/1.1.0/upack_2.13-1.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/upickle-implicits_2.13/1.1.0/upickle-implicits_2.13-1.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/geny_2.13/0.6.0/geny_2.13-0.6.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.13/1.2.0/scala-xml_2.13-1.2.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_2.13/2.6.5/akka-actor_2.13-2.6.5.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-slf4j_2.13/2.6.5/akka-slf4j_2.13-2.6.5.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/sourcecode_2.13/0.2.1/sourcecode_2.13-0.2.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-codec/commons-codec/1.13/commons-codec-1.13.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/xmlbeans/xmlbeans/3.1.0/xmlbeans-3.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scalanlp/breeze-macros_2.13/1.0/breeze-macros_2.13-1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/core/1.1.2/core-1.1.2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/net/sourceforge/f2j/arpack_combined_all/0.1/arpack_combined_all-0.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/net/sf/opencsv/opencsv/2.3/opencsv-2.3.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/wendykierp/JTransforms/3.1/JTransforms-3.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/chuusai/shapeless_2.13/2.3.3/shapeless_2.13-2.3.3.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/spire_2.13/0.17.0-M1/spire_2.13-0.17.0-M1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-collection-compat_2.13/2.1.4/scala-collection-compat_2.13-2.1.4.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/jfree/jfreechart/1.5.0/jfreechart-1.5.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/apache/xmlgraphics/xmlgraphics-commons/1.3.1/xmlgraphics-commons-1.3.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lowagie/itext/2.1.5/itext-2.1.5.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/upickle-core_2.13/1.1.0/upickle-core_2.13-1.1.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.0/config-1.4.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_2.13/0.9.0/scala-java8-compat_2.13-0.9.0.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/pl/edu/icm/JLargeArrays/1.5/JLargeArrays-1.5.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/spire-macros_2.13/0.17.0-M1/spire-macros_2.13-0.17.0-M1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/spire-platform_2.13/0.17.0-M1/spire-platform_2.13-0.17.0-M1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/spire-util_2.13/0.17.0-M1/spire-util_2.13-0.17.0-M1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/machinist_2.13/0.6.8/machinist_2.13-0.6.8.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/algebra_2.13/2.0.0-M2/algebra_2.13-2.0.0-M2.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-osx-x86_64/1.1/netlib-native_ref-osx-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-linux-x86_64/1.1/netlib-native_ref-linux-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-linux-i686/1.1/netlib-native_ref-linux-i686-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-win-x86_64/1.1/netlib-native_ref-win-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-win-i686/1.1/netlib-native_ref-win-i686-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_ref-linux-armhf/1.1/netlib-native_ref-linux-armhf-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-osx-x86_64/1.1/netlib-native_system-osx-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-linux-x86_64/1.1/netlib-native_system-linux-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-linux-i686/1.1/netlib-native_system-linux-i686-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-linux-armhf/1.1/netlib-native_system-linux-armhf-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-win-x86_64/1.1/netlib-native_system-win-x86_64-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/netlib-native_system-win-i686/1.1/netlib-native_system-win-i686-1.1-natives.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-io/commons-io/1.3.1/commons-io-1.3.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/typelevel/cats-kernel_2.13/2.0.0-M4/cats-kernel_2.13-2.0.0-M4.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/native_ref-java/1.1/native_ref-java-1.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/netlib/native_system-java/1.1/native_system-java-1.1.jar:/Users/fazi/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/com/github/fommil/jniloader/1.1/jniloader-1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.937613335 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
